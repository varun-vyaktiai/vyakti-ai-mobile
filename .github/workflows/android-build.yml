name: Build Vyakti AI React Native 0.73.6 (Direct Build)

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        cmdline-tools-version: 11076708
        packages: "platform-tools platforms;android-35 build-tools;35.0.0 ndk;25.1.8937393"

    - name: Install Gradle 8.1.1 Directly
      run: |
        wget -q https://services.gradle.org/distributions/gradle-8.1.1-bin.zip
        unzip -q gradle-8.1.1-bin.zip
        sudo mv gradle-8.1.1 /opt/gradle
        echo "/opt/gradle/bin" >> $GITHUB_PATH

    - name: Install Dependencies
      run: npm install --legacy-peer-deps

    - name: Create Complete React Native Project Structure
      run: |
        echo "sdk.dir=$ANDROID_HOME" > android/local.properties
        
        # Create settings.gradle that defines the project structure
        cat > android/settings.gradle << 'EOF'
        rootProject.name = 'VyaktiAI'
        include ':app'
        
        apply from: file("../node_modules/@react-native-community/cli-platform-android/native_modules.gradle")
        applyNativeModulesSettingsGradle(settings)
        EOF
        
        # Create root build.gradle with minimal dependencies
        cat > android/build.gradle << 'EOF'
        buildscript {
            ext {
                buildToolsVersion = "35.0.0"
                minSdkVersion = 24
                compileSdkVersion = 35
                targetSdkVersion = 35
                ndkVersion = "25.1.8937393"
                kotlinVersion = "1.8.10"
            }
            repositories {
                google()
                mavenCentral()
            }
            dependencies {
                classpath('com.android.tools.build:gradle:8.1.1')
                classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
            }
        }

        allprojects {
            repositories {
                google()
                mavenCentral()
                maven { url 'https://www.jitpack.io' }
                maven { url 'https://maven.google.com' }
            }
        }
        EOF

    - name: Create Gradle Properties
      run: |
        cat > android/gradle.properties << 'EOF'
        org.gradle.jvmargs=-Xmx4096M
        android.useAndroidX=true
        android.enableJetifier=true
        hermesEnabled=true
        newArchEnabled=false
        FLIPPER_VERSION=0.182.0
        EOF

    - name: Create Debug Keystore
      working-directory: android/app
      run: |
        if [ ! -f debug.keystore ]; then
          keytool -genkeypair -v -keystore debug.keystore -alias androiddebugkey \
            -keyalg RSA -keysize 2048 -validity 10000 \
            -storepass android -keypass android \
            -dname "CN=Android Debug,O=Android,C=US"
        fi

    - name: Verify Project Structure
      working-directory: android
      run: |
        echo "=== Gradle Projects ==="
        gradle projects --no-daemon
        echo "=== Available Tasks ==="
        gradle :app:tasks --no-daemon

    - name: Build Debug APK
      working-directory: android
      run: gradle :app:assembleDebug --no-daemon --stacktrace

    - name: Build Release APK
      working-directory: android
      run: gradle :app:assembleRelease --no-daemon --stacktrace

    - name: Build Release AAB
      working-directory: android
      run: gradle :app:bundleRelease --no-daemon --stacktrace

    - name: List Build Outputs
      run: |
        echo "=== Build Results ==="
        find android/app/build/outputs -name "*.apk" -o -name "*.aab" | sort
        for file in $(find android/app/build/outputs -name "*.apk" -o -name "*.aab"); do
          echo "$(basename $file): $(du -h "$file" | cut -f1)"
        done

    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: vyakti-ai-debug-direct
        path: android/app/build/outputs/apk/debug/*.apk

    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: vyakti-ai-release-direct
        path: android/app/build/outputs/apk/release/*.apk

    - name: Upload Release AAB
      uses: actions/upload-artifact@v4
      with:
        name: vyakti-ai-playstore-direct
        path: android/app/build/outputs/bundle/release/*.aab

    - name: Success Summary
      run: |
        echo "✅ Vyakti AI React Native 0.73.6 build successful!"
        echo "✅ Created complete project structure with settings.gradle"
        echo "✅ Debug APK: vyakti-ai-debug-direct"
        echo "✅ Release APK: vyakti-ai-release-direct"
        echo "✅ Play Store AAB: vyakti-ai-playstore-direct"
