name: Build Vyakti AI Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      
    - name: Install Android SDK components
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-35" "build-tools;35.0.0"

    - name: Install Node dependencies
      run: npm install --legacy-peer-deps

    - name: Create missing Android configuration files
      run: |
        echo "sdk.dir=$ANDROID_HOME" > android/local.properties
        
        cat > android/settings.gradle << 'EOF'
        pluginManagement {
            repositories {
                google()
                mavenCentral()
                gradlePluginPortal()
            }
        }
        dependencyResolutionManagement {
            repositoriesMode.set(RepositoriesMode.PREFER_PROJECT)
            repositories {
                google()
                mavenCentral()
                maven { url "https://www.jitpack.io" }
            }
        }

        rootProject.name = 'VyaktiAI'
        include ':app'
        includeBuild('../node_modules/@react-native/gradle-plugin')

        apply from: file("../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesSettingsGradle(settings)

        if (settings.hasProperty("newArchEnabled") && settings.newArchEnabled == "true") {
            include(":ReactAndroid")
            project(":ReactAndroid").projectDir = file("../node_modules/react-native/ReactAndroid")
            include(":ReactAndroid:hermes-engine")
            project(":ReactAndroid:hermes-engine").projectDir = file("../node_modules/react-native/ReactAndroid/hermes-engine")
        }
        EOF

    - name: Fix Android root build.gradle for React Native 0.73.6
      run: |
        cat > android/build.gradle << 'EOF'
        buildscript {
            ext {
                buildToolsVersion = "35.0.0"
                minSdkVersion = 24
                compileSdkVersion = 35
                targetSdkVersion = 35
                ndkVersion = "25.1.8937393"
                kotlinVersion = "1.8.10"
            }
            repositories {
                google()
                mavenCentral()
                maven { url "https://www.jitpack.io" }
            }
            dependencies {
                classpath("com.android.tools.build:gradle:8.1.1")
                classpath("com.facebook.react:react-native-gradle-plugin")
                classpath("org.jetbrains.kotlin:kotlin-gradle-plugin")
            }
        }

        apply plugin: "com.facebook.react.rootproject"

        allprojects {
            repositories {
                google()
                mavenCentral()
                maven { url "https://www.jitpack.io" }
                maven { url "https://maven.google.com" }
                maven {
                    url("$rootDir/../node_modules/react-native/android")
                }
            }
        }
        EOF

    - name: Create missing Android keystore
      run: |
        cd android/app
        if [ ! -f debug.keystore ]; then
            keytool -genkey -v -keystore debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "C=US, O=Android, CN=Android Debug"
        fi

    - name: Create gradle.properties for React Native 0.73.6
      run: |
        cat > android/gradle.properties << 'EOF'
        org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m
        android.useAndroidX=true
        android.enableJetifier=true
        FLIPPER_VERSION=0.182.0
        reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64
        newArchEnabled=false
        hermesEnabled=true
        android.experimental.legacyTransform.forceNonIncremental=true
        android.nonTransitiveRClass=true
        android.enableR8.fullMode=true
        org.gradle.parallel=true
        org.gradle.configureondemand=true
        org.gradle.daemon=true
        EOF

    - name: Setup Gradle Wrapper
      run: |
        cd android
        wget https://services.gradle.org/distributions/gradle-8.0-bin.zip
        unzip -q gradle-8.0-bin.zip
        export PATH=$PWD/gradle-8.0/bin:$PATH
        if [ ! -f gradlew ]; then
            gradle wrapper --gradle-version=8.0
        fi
        chmod +x gradlew

    - name: Clean and Build APK
      run: |
        cd android
        ./gradlew clean
        ./gradlew assembleRelease --stacktrace --info

    - name: Build AAB
      run: |
        cd android
        ./gradlew bundleRelease --stacktrace

    - name: Upload APK Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-apk-artifacts
        path: |
          android/app/build/outputs/apk/release/*.apk

    - name: Upload AAB Artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-aab-artifact
        path: android/app/build/outputs/bundle/release/app-release.aab

    - name: List build outputs
      run: |
        echo "=== APK Files ==="
        find android/app/build/outputs/apk/release -name "*.apk" -exec ls -la {} \;
        echo "=== AAB Files ==="
        find android/app/build/outputs/bundle/release -name "*.aab" -exec ls -la {} \;
