apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

/**
 * This is the configuration block to customize your React Native Android app.
 */
react {
    entryFile = "index.js"
    reactNativeDir = rootProject.file("../node_modules/react-native")
    codegenDir = rootProject.file("../node_modules/@react-native/codegen")
    cliFile = rootProject.file("../node_modules/@react-native/cli/build/bin.js")
    debuggableVariants = ["liveReload", "nightly", "staging"]
}

/**
 * Set this to true to create two separate APKs instead of one:
 * - An APK that only works on ARM devices
 * - An APK that only works on x86 devices
 */
def enableSeparateBuildPerCPUArchitecture = true

/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = true

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 */
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    compileSdkVersion rootProject.ext.compileSdkVersion

    namespace "com.vyaktiai.mobile"
    defaultConfig {
        applicationId "com.vyaktiai.mobile"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion 35  // Android 15 - Required for 2025 Play Store
        versionCode 1
        versionName "1.0.0"
        multiDexEnabled true
        
        // Required for 16KB page size compatibility (Google Play 2025 requirement)
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            if (project.hasProperty('VYAKTIAI_UPLOAD_STORE_FILE')) {
                storeFile file(VYAKTIAI_UPLOAD_STORE_FILE)
                storePassword VYAKTIAI_UPLOAD_STORE_PASSWORD
                keyAlias VYAKTIAI_UPLOAD_KEY_ALIAS
                keyPassword VYAKTIAI_UPLOAD_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    // Google Play Store 2025 requirement: Multiple APKs for different architectures
    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false
            include "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
    }

    // Set different version codes for different ABIs
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def versionCodes = ["armeabi-v7a": 1, "arm64-v8a": 2, "x86": 3, "x86_64": 4]
            def abi = output.getFilter(com.android.build.OutputFile.ABI)
            if (abi != null) {
                output.versionCodeOverride =
                        defaultConfig.versionCode * 1000 + versionCodes.get(abi)
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation("com.facebook.react:react-android")
    implementation("androidx.swiperefreshlayout:swiperefreshlayout:1.0.0")
    implementation 'androidx.multidex:multidex:2.0.1'
    
    debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}")
    debugImplementation("com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}") {
        exclude group:'com.squareup.okhttp3', module:'okhttp'
    }
    debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}")
    
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
